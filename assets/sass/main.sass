//////////////////
// IMPORT FONTS //
//////////////////

// The font (Inter) is free and open source. The following import
// snippet was freely taken from their website https://rsms.me/inter/.

// Note that the font has features, to be enabled with
// `font-feature-settings`: https://rsms.me/inter/#faq-using-features.

// Btw, as per the website, it is safe to import the font from rsms.me
// directly:
// > How reliable are the fonts served from rsms.me/inter?
// >
// > "https://rsms.me/inter/inter.css" and the Inter font files are
// > distributed globally over CloudFlareâ€™s CDN. This is very reliable
// > and fast by automatically serving the fonts from a server near your
// > users, minimizing the latency of your web pages.

\:root
  font-family: Inter, sans-serif
  font-feature-settings: 'liga' 1, 'calt' 1, 'dlig' 1, 'frac' 1, 'cv10' 1

@supports (font-variation-settings: normal)
  \:root
    font-family: InterVariable, sans-serif


//////////////////////
// GENERAL SETTINGS //
//////////////////////

$vp_width: 85%

html
    height: 100vh

body
    height: 100vh

    // Center, fix width
    margin: auto
    max-width: $vp_width

    // For the sticky footer:
    display: flex
    flex-direction: column

main
    // For the sticky footer:
    flex: 1 0 auto

footer
    text-align: center
    // Display the footer as a flex, with two main rows/lines
    // N.b. These two lines are div's without class or id
    display: flex
    flex-direction: column
    // For the sticky footer:
    flex-shrink: 0

.material-resource
    width: 100vw
    margin-left: 50%
    transform: translateX(-50%)
    display: block
    text-decoration: none

.material-resource-title
    width: $vp_width
    margin: 0 auto


////////////////////////////////////////
// SIZES, MARGINS, PADDING, AND STUFF //
////////////////////////////////////////

$material-top-bottom-padding: 16px

#material
  margin:
    bottom: 40px
    top: 20px

.material-resource
  padding:
    bottom: $material-top-bottom-padding
    top: $material-top-bottom-padding

#course-description
  column-gap: 60px
  row-gap: 40px

footer
  margin:
    top: 80px
  // Here, I should use margin instead of padding. But, it doesn't work
  // probably because of the sticky footer flex thing, and since the
  // background is transparent, I do not care enough now (but eventually
  // should) to fix it. However, if you now how to, please do it, or
  // tell me how to do it. Love.
  padding:
    bottom: 15px

footer p
  margin: 0

/////////////////////////////////
// GRID FOR COURSE DESCRIPTION //
/////////////////////////////////

#course-description
  display: grid
  grid-template-columns: 1fr 1fr // Two equal columns
  grid-template-rows: auto auto  // Two rows with auto height

  // First two divs go in the first row
  > :nth-child(1),
  > :nth-child(2)
    grid-row: 1

  // Third div goes in second row, first column
  > :nth-child(3)
    grid-row: 2
    grid-column: 1


////////////
// COLORS //
////////////

// 2-color palette: https://coolors.co/32127a-f9f8f8

$gradient-4: #32127A
$gradient-3: #4118A0
$gradient-2: #4F1DC3
$gradient-1: #602ADF

$wisteria: #BC96E6

$white: #F9F8F8
$gray-background: #D9D3D3

body, html
  background: $white

.material-resource-title
  color: $white

.material-resource-title#all
  color: black

// For the material resource color, we proceed as follows. There are
// two main situations:

// 1. The #material section is NOT being hovered on. In that case, each
//    material has its own color, given by the hash map $material-colors.

$material-colors: ("Poly": $gradient-4, "TD": $gradient-3, "Annales": $gradient-2, "Misc": $gradient-1)

@each $type, $color in $material-colors
  .material-resource
    &[data-type=#{$type}]
      background-color: $color

// 2. The #material section is YES being hovered on. In that case, we
//    want the material resource being hovered on to keep its original
//    color, and the other resources' backgrounds to turn gray. The way
//    to do so is to act at the #material level. In that order:
//    [a] Set the background of all children (i.e. .material-resource)
//        to gray.
//    [b] AFTER THAT, Set the color of the child being hovered-on to
//        its original color.
//
// One possibility was to play with so-called "siblings selectors", but
   `~` works only for subsequent siblings.

#material
  &:hover
    .material-resource
      background-color: $gray-background

    .material-resource:hover
      @each $type, $color in $material-colors
        &[data-type=#{$type}]
          background-color: $color

.material-resource
    background: $gray-background

.material-resource
  // I don't mind a little transition...
  transition: background-color 0.1s ease

#course-titles h1
  color: $wisteria

footer, footer a
    color: grey

///////////////////
// FONT SETTINGS //
///////////////////

#course-titles h1
  font-weight: 700
  font-size: 60px
  text-transform: uppercase

#course-titles h2
  font-weight: 200

#course-titles #course-titles-title
  font-style: italic

#course-description h1
  font-size: 120%

footer
  font-size: 80%
  font-weight: 300

/////////////////
// A FEW NOTES //
/////////////////

// - For sticky footers, see: https://css-tricks.com/couple-takes-sticky-footer/
// - For converting CSS to SASS, see: https://css2sass.herokuapp.com/ 
// - Documentation for SASS variables: https://sass-lang.com/documentation/variables/
// - Careful if you use @import, it is deprecated as of Dart Sass 1.80:
         https://sass-lang.com/blog/import-is-deprecated/
// - Data attributes in CSS: https://css-tricks.com/a-complete-guide-to-data-attributes/
// - SASS hashmaps/dictionnaries: https://sass-lang.com/documentation/values/maps/

// A few beautiful palettes:
// - Persian indigo and Wisteria: https://coolors.co/32127a-bc96e6
